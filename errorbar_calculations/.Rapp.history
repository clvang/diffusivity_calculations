expression( paste("U"[D]*"/", bar(D)")") )
expression( paste("U"[D]"/")
expression( paste("U"[D]/"D"[avg])
)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
p31 <- createPlot(#
	xvar = HepHex_nocoolflame$K, #
	yvar = (HepHex_nocoolflame$eps_upper - HepHex_nocoolflame$eps_lower)/#
			HepHex_nocoolflame$eps_avg, #
	importDataFrame = HepHex_nocoolflame, #
	plotname = "EpsrelError_hephexonly_CoolFlameONLY_MCN95.pdf",#
	legendXloc = 0.66, #
	legendYloc = 0.78, #
	xlabel = expression( paste( bar(K), " ","(",mm^2/s,")" ) ),   #
	ylabel = expression( paste("Relative Error, U"[epsilon]/"epsilon"[avg]) ), #
	rangeDdiscrete = relErEpsrangehephex_nocoolflame, #
	factors = HepHex_nocoolflame$dataSet.factors,#
	errBarWidth = 0.01,#
	xvarName = "K",#
	xExpansionFactor = 0.1,#
	errbarHeight = 1.5e-9,#
	ptsize = 4.5,#
	yExpansionFactor = 0.1)
range <- range( c( (HepHex_nocoolflame$eps_upper - HepHex_nocoolflame$eps_lower)/HepHex_nocoolflame$eps_avg) ) #
noInt <- 3;#
rangeDincr <- (range[2]-range[1] )/noInt;#
relErEpsrangehephex_nocoolflame <- rep(NA,noInt3+1)#
for (i in 1:(noInt+1)){#
	relErEpsrangehephex_nocoolflame[i] <- range[1] + (i-1)*rangeDincr#
}#
relErEpsrangehephex_nocoolflame <- signif(relErEpsrangehephex_nocoolflame,1)#
p31 <- createPlot(#
	xvar = HepHex_nocoolflame$K, #
	yvar = (HepHex_nocoolflame$eps_upper - HepHex_nocoolflame$eps_lower)/#
			HepHex_nocoolflame$eps_avg, #
	importDataFrame = HepHex_nocoolflame, #
	plotname = "EpsrelError_hephexonly_CoolFlameONLY_MCN95.pdf",#
	legendXloc = 0.66, #
	legendYloc = 0.78, #
	xlabel = expression( paste( bar(K), " ","(",mm^2/s,")" ) ),   #
	ylabel = expression( paste("Relative Error, U"[epsilon]/"epsilon"[avg]) ), #
	rangeDdiscrete = relErEpsrangehephex_nocoolflame, #
	factors = HepHex_nocoolflame$dataSet.factors,#
	errBarWidth = 0.01,#
	xvarName = "K",#
	xExpansionFactor = 0.1,#
	errbarHeight = 1.5e-9,#
	ptsize = 4.5,#
	yExpansionFactor = 0.1)
p31 <- createPlot(#
	xvar = HepHex_nocoolflame$K, #
	yvar = (HepHex_nocoolflame$eps_upper - HepHex_nocoolflame$eps_lower)/#
			HepHex_nocoolflame$eps_avg, #
	importDataFrame = HepHex_nocoolflame, #
	plotname = "EpsrelError_hephexonly_CoolFlameONLY_MCN95.pdf",#
	legendXloc = 0.66, #
	legendYloc = 0.78, #
	xlabel = expression( paste( bar(K), " ","(",mm^2/s,")" ) ),   #
	ylabel = expression( paste("Relative Error, U"[epsilon]/epsilon[avg]) ), #
	rangeDdiscrete = relErEpsrangehephex_nocoolflame, #
	factors = HepHex_nocoolflame$dataSet.factors,#
	errBarWidth = 0.01,#
	xvarName = "K",#
	xExpansionFactor = 0.1,#
	errbarHeight = 1.5e-9,#
	ptsize = 4.5,#
	yExpansionFactor = 0.1)
p31 <- createPlot(#
	xvar = HepHex_nocoolflame$K, #
	yvar = (HepHex_nocoolflame$eps_upper - HepHex_nocoolflame$eps_lower)/#
			HepHex_nocoolflame$eps_avg, #
	importDataFrame = HepHex_nocoolflame, #
	plotname = "EpsrelError_hephexonly_CoolFlameONLY_MCN95.pdf",#
	legendXloc = 0.66, #
	legendYloc = 0.78, #
	xlabel = expression( paste( bar(K), " ","(",mm^2/s,")" ) ),   #
	ylabel = expression( paste("Relative Error, U"[epsilon]/bar(epsilon) ) ), #
	rangeDdiscrete = relErEpsrangehephex_nocoolflame, #
	factors = HepHex_nocoolflame$dataSet.factors,#
	errBarWidth = 0.01,#
	xvarName = "K",#
	xExpansionFactor = 0.1,#
	errbarHeight = 1.5e-9,#
	ptsize = 4.5,#
	yExpansionFactor = 0.1)
p30 <- createPlot(#
	xvar = HepHex_nocoolflame$K, #
	yvar = (HepHex_nocoolflame$DmcHigh_N95 - HepHex_nocoolflame$DmcLow_N95)/#
			HepHex_nocoolflame$Dmc_AV_N95, #
	importDataFrame = HepHex_nocoolflame, #
	plotname = "DrelError_hephexonly_CoolFlameONLY_MCN95.pdf",#
	legendXloc = 0.66, #
	legendYloc = 0.78, #
	xlabel = expression( paste( bar(K), " ","(",mm^2/s,")" ) ),   #
	ylabel = expression( paste("Relative Error, U"[D]/bar(D)) ), #
	rangeDdiscrete = relErDrangehephex_nocoolflame, #
	factors = HepHex_nocoolflame$dataSet.factors,#
	errBarWidth = 0.01,#
	xvarName = "K",#
	xExpansionFactor = 0.1,#
	errbarHeight = 1.5e-9,#
	ptsize = 4.5,#
	yExpansionFactor = 0.1)
p31 <- createPlot(#
	xvar = HepHex_nocoolflame$K, #
	yvar = (HepHex_nocoolflame$eps_upper - HepHex_nocoolflame$eps_lower)/#
			HepHex_nocoolflame$eps_avg, #
	importDataFrame = HepHex_nocoolflame, #
	plotname = "EpsrelError_hephexonly_CoolFlameONLY_MCN95.pdf",#
	legendXloc = 0.25, #
	legendYloc = 0.78, #
	xlabel = expression( paste( bar(K), " ","(",mm^2/s,")" ) ),   #
	ylabel = expression( paste("Relative Error, U"[epsilon]/bar(epsilon) ) ), #
	rangeDdiscrete = relErEpsrangehephex_nocoolflame, #
	factors = HepHex_nocoolflame$dataSet.factors,#
	errBarWidth = 0.01,#
	xvarName = "K",#
	xExpansionFactor = 0.1,#
	errbarHeight = 1.5e-9,#
	ptsize = 4.5,#
	yExpansionFactor = 0.2)
p31 <- createPlot(#
	xvar = HepHex_nocoolflame$K, #
	yvar = (HepHex_nocoolflame$eps_upper - HepHex_nocoolflame$eps_lower)/#
			HepHex_nocoolflame$eps_avg, #
	importDataFrame = HepHex_nocoolflame, #
	plotname = "EpsrelError_hephexonly_CoolFlameONLY_MCN95.pdf",#
	legendXloc = 0.2, #
	legendYloc = 0.78, #
	xlabel = expression( paste( bar(K), " ","(",mm^2/s,")" ) ),   #
	ylabel = expression( paste("Relative Error, U"[epsilon]/bar(epsilon) ) ), #
	rangeDdiscrete = relErEpsrangehephex_nocoolflame, #
	factors = HepHex_nocoolflame$dataSet.factors,#
	errBarWidth = 0.01,#
	xvarName = "K",#
	xExpansionFactor = 0.1,#
	errbarHeight = 1.5e-9,#
	ptsize = 4.5,#
	yExpansionFactor = 0.2)
p31 <- createPlot(#
	xvar = HepHex_nocoolflame$K, #
	yvar = (HepHex_nocoolflame$eps_upper - HepHex_nocoolflame$eps_lower)/#
			HepHex_nocoolflame$eps_avg, #
	importDataFrame = HepHex_nocoolflame, #
	plotname = "EpsrelError_hephexonly_CoolFlameONLY_MCN95.pdf",#
	legendXloc = 0.18, #
	legendYloc = 0.78, #
	xlabel = expression( paste( bar(K), " ","(",mm^2/s,")" ) ),   #
	ylabel = expression( paste("Relative Error, U"[epsilon]/bar(epsilon) ) ), #
	rangeDdiscrete = relErEpsrangehephex_nocoolflame, #
	factors = HepHex_nocoolflame$dataSet.factors,#
	errBarWidth = 0.01,#
	xvarName = "K",#
	xExpansionFactor = 0.1,#
	errbarHeight = 1.5e-9,#
	ptsize = 4.5,#
	yExpansionFactor = 0.2)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
hist(D_eff$eps_N95,prob=T,n=100)
hist(K_mcN96,prob=T,n=100)
hist(K_mcN95,prob=T,n=100)
hist(D_eff$eps_N95*K_mcN05,prob=T,n=100)
hist(D_eff$eps_N95*K_mcN95,prob=T,n=100)
ds(K_mcN95)
sd(K_mcN95)
sd(D_eff$eps_N95)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
D_eff$eps_upper-D_eff$eps_lower
D_eff$eps_bar
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
sd(D_eff$K_mcN95)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
library(ggplot2)#
library(directlabels)#
#my data set:#
oc <- read.csv("http://www.columbia.edu/~mad2200/oc.csv")#
oc$percent_women <- oc$W_employment/(oc$M_employment+oc$W_employment)#
oc$size <- oc$W_employment+oc$M_employment#
p <- ggplot(oc, aes(M_w_earnings, W_w_earnings, label = as.character(Occupational.Group)))#
p + geom_point(aes(size = size, colour=percent_women)) + scale_size_continuous(range=c(0,30)) + #scale_area()+#
#geom_point(aes(colour = oc$percent_women)) + #
coord_equal() +#
scale_colour_gradient(high = "red")+#
ylim(700, 1700) +#
xlim(700, 1700) +#
geom_abline(slope=1) +#
labs(title = "Income Disparity by Occupation and Gender") +#
ylab("Women's Weekly Earnings in $") +#
xlab("Men's Weekly Earnings in $")
names(oc)
oc
help(type)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
plotOut
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/test.R', chdir = TRUE)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
#command window if this code does not at run at first.#
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
double(5)
length(5)
test <- c(1,2,3,45)
length(test)
testing1 <- numeric(5)
testing1
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/raw_Rcode_results/skewed_experiments.R', chdir = TRUE)
N
eps
M <- 1e6#
par(mfrow=c(2,2))#
for (i in 1:N) {#
	D <- rnorm(n=M,mean=eps[i],sd=sigma_eps[i])*rnorm(n=M,mean=K[i],sd=sigma_K[i])/8#
	hist(D,prob=TRUE)#
}
for (i in 1:N) {#
	D <- rnorm(n=M,mean=eps[i],sd=sigma_eps[i])*rnorm(n=M,mean=K[i],sd=sigma_K[i])/8#
	hist(D,prob=TRUE)#
	readline("--press enter--")#
}
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/raw_Rcode_results/skewed_experiments.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
hist(eps_N95,prob=T,n=100)
dev.new(), hist(K_mcN95,prob=T,n=100)
dev.new(); hist(K_mcN95,prob=T,n=100)
dev.new(); hist(eps_N95*K_mcN95/8,prob=T,n=100)
N
D_new <- rnorm(n=N, mean=0.3089,sd=0.02079436)
eps_new <- rnorm(n=N, mean=0.3089,sd=0.02079436)
dev.new(); hist(K_mcN95*eps/new/8,prob=T,n=100)
dev.new(); hist(K_mcN95*eps_new/8,prob=T,n=100)
dev.new(); hist(eps_new,prob=T,n=100)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
0.506*177.8
0.506/3600
101350-(1.22/2)*(1.406e-4)*286141.36
101350-(1.22/2)*( (1.406e-4)*286141.36)^2
0.1/3600
101350-(1.22/2)*((2.78e-5)*(1.448e6))^2
( (1.406e-4)*286141.36)^2
(1.22/2)*((2.78e-5)*(1.448e6))^2
((2.78e-5)*(1.448e6))^2
40*400/90
90*400/40
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
dev.new(); hist(Deffective,prob=T,n=100)
deve.new(); hist(eps_N95,prob=T,n=100)
dev.new(); hist(eps_N95,prob=T,n=100)
dev.new(); hist(K_mcN95,prob=T,n=100)
dev.new(); hist(eps_N95*K_mcN95/8,prob=T,n=100)
dev.new(); hist(rnorm(mean=0.3089,n=N,sd=0.02079436)*K_mcN95/8,prob=T,n=100)
dev.new(); hist(eps_N95,prob=T,n=100)
dev.new(); hist(K_mcN95,prob=T,n=100)
dev.new(); hist(eps_N95*K_mcN95/8,prob=T,n=100)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/raw_Rcode_results/skewed_experiments.R', chdir = TRUE)
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))
# do it#
ggplot(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")
# do it#
ggplot2(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")
# do it#
ggplot(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")
library(ggplot2)
# do it#
ggplot(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")
# example with outliers#
# define outlier as you want    #
o <- function(x) {#
  subset(x, x < quantile(x)[2] | quantile(x)[4] < x)#
}#
#
# do it#
ggplot(d, aes(x, y)) + #
  stat_summary(fun.data=f, geom="boxplot") + #
  stat_summary(fun.y = o, geom="point")
help(gl)
# do it#
stat_boxplot(geom='errorbar') +#
ggplot(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
stat_boxplot(geom='errorbar') +#
ggplot(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
stat_boxplot(geom='errorbar') +#
ggplot(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
stat_boxplot(geom='errorbar') +#
geom_boxplot(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + geom_boxplot(aes(fill=VboxPlotxFactors), show.legend=FALSE, notch=FALSE,#
	  	outlier.shape=NA )
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + geom_boxplot(aes( show.legend=FALSE, notch=FALSE,#
	  	outlier.shape=NA )
)
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + geom_boxplot(aes( show.legend=FALSE, notch=FALSE,#
	  	outlier.shape=NA ) ) #
+ stat_summary(geom="errobar")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + geom_boxplot(aes( show.legend=FALSE, notch=FALSE,#
	  	outlier.shape=NA ) ) #
+ stat_summary(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + geom_boxplot(aes( show.legend=FALSE, notch=FALSE,#
	  	outlier.shape=NA ) ) + stat_summary(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + #
geom_boxplot(aes( show.legend=FALSE, notch=FALSE, outlier.shape=NA ) ) + #
stat_summary(geom='errorbar') +#
geom_jitter(position=position_jitter(width=.4, height=0))
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + #
geom_boxplot(aes( show.legend=FALSE, notch=FALSE, outlier.shape=NA ) ) + #
stat_summary(geom='errorbar', fun.data = f) +#
geom_jitter(position=position_jitter(width=.4, height=0))
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + #
geom_boxplot(aes( show.legend=FALSE, notch=FALSE, outlier.shape=NA ) ) + #
stat_summary(geom='errorbar') +#
geom_jitter(position=position_jitter(width=.4, height=0))
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
ggplot(data=d, aes(x, y)) + #
geom_boxplot(aes( show.legend=FALSE, notch=FALSE, outlier.shape=NA ) ) + #
stat_summary(geom='errorbar') +#
geom_jitter(position=position_jitter(width=.1, height=0))
names(d)
plot(d$x,d$y)
d
plot(d$x,d$y)
# do it#
dev.new()#
ggplot(data=d, aes(x, y)) + #
geom_boxplot(aes( show.legend=FALSE, notch=FALSE, outlier.shape=NA ) ) + #
stat_summary(geom='errorbar') +#
geom_jitter(position=position_jitter(width=.1, height=0))
dev.new(); boxplot(d$x,d$y)
# example with outliers#
# define outlier as you want    #
o <- function(x) {#
  subset(x, x < quantile(x)[2] | quantile(x)[4] < x)#
}#
#
# do it#
ggplot(d, aes(x, y)) + #
  stat_summary(fun.data=f, geom="boxplot") + #
  stat_summary(fun.y = o, geom="point")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
dev.new()#
ggplot(data=d, aes(x, y)) + #
geom_boxplot(aes( show.legend=FALSE, notch=FALSE, outlier.shape=NA ) ) + #
stat_summary(geom='errorbar') +#
geom_jitter(position=position_jitter(width=.1, height=0)) #
#
# example with outliers#
# define outlier as you want    #
o <- function(x) {#
  subset(x, x < quantile(x)[2] | quantile(x)[4] < x)#
}#
#
# do it#
ggplot(d, aes(x, y)) + #
  stat_summary(fun.data=f, geom="boxplot") + #
  stat_summary(fun.y = o, geom="point")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
dev.new()#
ggplot(data=d, aes(x, y)) + #
geom_boxplot(aes( show.legend=FALSE, notch=FALSE, outlier.shape=NA ) ) + #
stat_summary(geom='errorbar') +#
geom_jitter(position=position_jitter(width=.1, height=0)) #
#
# example with outliers#
# define outlier as you want    #
o <- function(x) {#
  subset(x, x < quantile(x)[2] | quantile(x)[4] < x)#
}#
#
# do it#
dev.new()#
ggplot(d, aes(x, y)) + #
  stat_summary(fun.data=f, geom="boxplot") + #
  stat_summary(fun.y = o, geom="point")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
# define the summary function#
f <- function(x) {#
  r <- quantile(x, probs = c(0.05, 0.25, 0.5, 0.75, 0.95))#
  names(r) <- c("ymin", "lower", "middle", "upper", "ymax")#
  r#
}#
#
# sample data#
d <- data.frame(x=gl(2,50), y=rnorm(100))#
#
# do it#
dev.new()#
# ggplot(data=d, aes(x, y)) + #
# geom_boxplot(aes( show.legend=FALSE, notch=FALSE, outlier.shape=NA ) ) + #
# stat_summary(geom='errorbar') +#
# geom_jitter(position=position_jitter(width=.1, height=0)) #
ggplot(d, aes(x, y)) + stat_summary(fun.data = f, geom="boxplot")#
# example with outliers#
# define outlier as you want    #
o <- function(x) {#
  subset(x, x < quantile(x)[2] | quantile(x)[4] < x)#
}#
#
# do it#
dev.new()#
ggplot(d, aes(x, y)) + #
  stat_summary(fun.data=f, geom="boxplot") + #
  stat_summary(fun.y = o, geom="point")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  )
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) +#
   stat_summary(geom='errobar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) +#
   stat_boxplot(geom='errobar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) + stat_boxplot(geom='errobar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x)) + stat_boxplot(geom='errobar') +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  )
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x)) + stat_boxplot(geom='errorbar') +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  )
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x,y)) + stat_boxplot(geom='errorbar') +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  )
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+#
   # stat_boxplot(geom='errorbar')
dataframe
df
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
 ggplot(df, aes(x)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+#
   # stat_boxplot(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+#
   # stat_boxplot(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y),#
   y25 <- quantile(y, 0.25),#
   y50 <- median(y),#
   y75 <- quantile(y, 0.75),#
   y100 <- max(y)#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+#
   # stat_boxplot(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+#
   # stat_boxplot(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  )
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+#
   # stat_boxplot(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) +#
  geom_jitter(position=position_jitter(width=.1, height=0))
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) + geom_jitter(position=position_jitter(width=.1, height=0))
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  )
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+#
   # stat_boxplot(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+#
   # stat_boxplot(geom='errorbar')
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity"#
  ) #+
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity")
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 p1 <- ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity")
p1
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 p1 <- ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity") #
p1 <- p1 + geom_jitter(position=position_jitter(width=.4, height=0))
p1
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 p1 <- ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity") #
p2 <- p1 + geom_jitter(position=position_jitter(width=.4, height=0))
p1
p2
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
 p1 <- ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity") #
p2 <- p1 + geom_jitter(position=position_jitter(width=.1, height=0))
p2
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
p1 <- ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity") #
p1 <- p1 + geom_jitter(position=position_jitter(width=.1, height=0))
p1
rm(list=ls(all=TRUE))
p1
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 df <- data.frame(#
   x = 1,#
   y0 = min(y),#
   y25 = quantile(y, 0.25),#
   y50 = median(y),#
   y75 = quantile(y, 0.75),#
   y100 = max(y)#
 )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
p1 <- ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity") #
p1 <- p1 + geom_jitter(position=position_jitter(width=.1, height=0))
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
boxplot(y)
p1
dev.new(); boxplot(y)
source('~/Desktop/test.R', chdir = TRUE)
p1
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 # df <- data.frame(#
 #   x = 1,#
 #   y0 = min(y),#
 #   y25 = quantile(y, 0.25),#
 #   y50 = median(y),#
 #   y75 = quantile(y, 0.75),#
 #   y100 = max(y)#
 # )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
p1 <- ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity") #
p1 <- p1 + geom_boxplot(aes(fill=x))#
p1 <- p1 + geom_jitter(position=position_jitter(width=.1, height=0))#
#
p1 <- p1 + stat_boxplot(geom='errorbar')
p1
rm(list=ls(all=TRUE))   #remove all variables in  workspace#
library(ggplot2)#
#
 # It's possible to draw a boxplot with your own computations if you#
 # use stat = "identity":#
 y <- rnorm(100)#
 # df <- data.frame(#
 #   x = 1,#
 #   y0 = min(y),#
 #   y25 = quantile(y, 0.25),#
 #   y50 = median(y),#
 #   y75 = quantile(y, 0.75),#
 #   y100 = max(y)#
 # )#
#
   y0 <- min(y)#
   y25 <- quantile(y, 0.25)#
   y50 <- median(y)#
   y75 <- quantile(y, 0.75)#
   y100 <- max(y)#
#
 df2 <- data.frame(x=gl(1,100),y)#
p1 <- ggplot(data=df2, aes(x,y)) +#
   geom_boxplot(#
    aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),#
    stat = "identity", width=0.3) #
p1 <- p1 + geom_boxplot(aes(fill=x))#
p1 <- p1 + geom_jitter(position=position_jitter(width=.1, height=0))#
#
p1 <- p1 + stat_boxplot(geom='errorbar')
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
boxplot(df2)
df2
boxplot(df2$x,df2$y)
source('~/Desktop/test.R', chdir = TRUE)
library(adply)
library(plyr)
help(adply)
source('~/Desktop/test.R', chdir = TRUE)
b
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Desktop/test.R', chdir = TRUE)
p1
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
#command window if this code does not at run at first.#
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
source('~/Box Sync/HepHex_Paper/HepHex_Data/HepHex_Diffusivities/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
