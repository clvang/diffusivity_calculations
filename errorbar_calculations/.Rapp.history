n_trials
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
n_trials
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
fit
Y_dataframe <- data.frame(YA, YB)
Y_dataframe
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
as.numeric(9)
numeric(9)
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
Y_dataframe[i, ]
i
mean(Y_dataframe[i, ])
as.numeric(Y_dataframe[i, ])
mean(as.numeric(Y_dataframe[i, ]))
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
Y_bar
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
Y_dataframe
( (74-Y_bar[1])^2 + (74-Y_bar[1])^2 + (76-Y_bar[1])^2 ) / (3-1)
( (74-Y_bar[1])^2 + (74-Y_bar[1])^2 + (76-Y_bar[1])^2 ) / (3)
sqrt(0.8888)
fit
names(fit)
fit$coefficients
fit$coefficients[1]
fit$coef[1]
as.numeric(fit$coef[1])
Y_avg <- as.numeric(fit$coef[1])#
E1 <- as.numeric(fit$coef[2])*2#
E2 <- as.numeric(fit$coef[3])*2#
E3 <- as.numeric(fit$coef[4])*2#
I12 <- as.numeric(fit$coef[5])*2#
I13 <- as.numeric(fit$coef[6])*2#
I23 <- as.numeric(fit$coef[7])*2#
I123 <- as.numeric(fit$coef[8])*2
print(E1, E2)
print(E1)
8*3
nrow(data)
nu <- (2-1)*(2^3)
nu
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
nu
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
print(fit$coef[1:7])
print(fit$coef[2:8]*2)
Y_sdPooled <- sqrt(mean(Y_var))
Y_sdPooled
n_trials*(2^3)
#print effects and interactions#
print(fit$coef[2:8]*2)#
#
#compute pooled std#
sigma_pooled <- sqrt(mean(Y_var))#
#
#compute standard error#
n_f <- n_trials*(2^3)#
S_E <- 2*sigma_pooled/sqrt(n_f)#
#
#compute signal to noise t-ratio#
fit$coef[2:8]*2 / S_E
t95_nu
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
fit$coefs
fit$coefficients
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
mean(Y_var)
mean(Y_sd)
fit$coefficients
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
mean(Y_var)
source('~/Box Sync/HepHex_Paper/HepHex_Diffusivities/conditional_inference_analysisHepHex.R', chdir = TRUE)
head(airquality)
airq <- subset(airquality, !is.na(Ozone))
air.ct <- ctree(Ozone ~ ., data = airq, controls = ctree_control(maxsurrogate = 3))
air.ct <- ctree(Ozone ~ ., data = airq, controls = c(maxsurrogate = 3) )
air.ct <- ctree(Ozone ~ ., data = airq, controls = list(maxsurrogate = 3) )
nrow(airq)
air.ct <- ctree(Ozone ~ ., data = airq)
air.ct
plot(air.ct)
help(sapply)
sapply(airq[,-1], class)
names(paper_data)
p_value <- 0.05#
#
quartz()#
D_ctree <- ctree(D~tdtv_avg+XO2+Inert+XN2+XHe+K+#
	Y_Heptane+Y_Propanol,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(D_ctree, main="Effective Liquid Diffusivity (All Experiments)")
plot(D_ctree, main="Effective Liquid Diffusivity (All Experiments)")
quartz()#
K_ctree <- ctree(K~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(K_ctree, main="Burning Rate (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol+K,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="tdtv_avg (All Experiments)")
source('~/Box Sync/HepHex_Paper/HepHex_Diffusivities/conditional_inference_analysisHepHex.R', chdir = TRUE)
plot(EABBA_ctreeHepHex, main="tdtv_avg (Hep/Hex)")
p_value2 <- 0.1#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol+K, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")
#plot EABBA tree for Hep-Hex experiments only#
p_value2 <- 0.05#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol+K, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")
names(hepHexSubset)
source('~/Box Sync/HepHex_Paper/HepHex_Diffusivities/conditional_inference_analysisHepHex.R', chdir = TRUE)
p_value2 <- 0.05#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+K+t_fc+d_c, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")
#plot EABBA tree for Hep-Hex experiments only#
p_value2 <- 0.1#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+K+t_fc+d_c, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")
p_value2 <- 0.5#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+K+t_fc+d_c, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")
p_value2 <- 0.8#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+K+t_fc+d_c, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")
names(hepHexSubset)
p_value2 <- 0.8#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+K+t_fc+d_c+t_delay+P, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")
#plot EABBA tree for Hep-Hex experiments only#
p_value2 <- 0.8#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~., data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")
hepHexSubset$t_fc
quartz()#
K_ctree <- ctree(K~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol+t_fc+d_c+t_delay+P,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(K_ctree, main="Burning Rate (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol+K+t_fc+d_c+t_delay+P,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot EABBA tree for Hep-Hex experiments only#
p_value2 <- 0.05#
quartz()#
EABBA_ctreeHepHex <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+K+t_fc+d_c+t_delay+P, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctreeHepHex, main="EF_avg (Hep/Hex)")#
#
#plot tdtv_avg tree for Hep-Hex experiments only#
quartz()#
D_ctreeHepHex <- ctree(D~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol+K+t_fc+d_c, data=hepHexSubset,#
mincriterion=1-p_value2,minbucket=0,minsplit=0,stump=FALSE)#
plot(D_ctreeHepHex, main="Effective Liquid Diffusivity (Hep/Hex)")#
#
# print out analysis reports#
D_ctree#
# eps_ctree#
K_ctree
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol+K+t_fc+d_c+t_delay+P,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+Y_Propanol+t_fc+d_c+t_delay+P,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+d0+XO2+Inert+XN2+XHe+#
	Y_Heptane+#
	Y_Propanol+K+t_fc+d_c+t_delay+P,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	XO2+#
	Inert+#
	XN2+#
	XHe+#
	Y_Heptane+#
	Y_Propanol+#
	K+#
	t_fc+#
	d_c+#
	t_delay+#
	P,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	XO2+#
	Inert+#
	XN2+#
	XHe+#
	Y_Heptane+#
	Y_Propanol+#
	# K+#
	t_fc+#
	# d_c+#
	# t_delay+#
	P,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	XO2+#
	Inert+#
	XN2+#
	XHe+#
	Y_Heptane+#
	# Y_Propanol+#
	# K+#
	# d_c+#
	# t_delay+#
	# P+#
	t_fc,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	# XO2+#
	Inert+#
	XN2+#
	XHe+#
	# Y_Heptane+#
	# Y_Propanol+#
	# K+#
	# d_c+#
	# t_delay+#
	# P+#
	t_fc,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	# XO2+#
	Inert+#
	XN2+#
	XHe+#
	Y_Heptane+#
	# Y_Propanol+#
	# K+#
	# d_c+#
	# t_delay+#
	# P+#
	t_fc,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
quartz()#
D_ctree <- ctree(D~tdtv_avg+XO2+Inert+XN2+XHe+K+#
	Y_Heptane+Y_Propanol+t_fc+d_c,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(D_ctree, main="Effective Liquid Diffusivity (All Experiments)")
quartz()#
D_ctree <- ctree(D~tdtv_avg+XO2+Inert+XN2+XHe+K+#
	Y_Heptane+Y_Propanol+t_fc+d_c+t_delay+P,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(D_ctree, main="Effective Liquid Diffusivity (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	XO2+#
	Inert+#
	XN2+#
	XHe+#
	Y_Heptane+#
	# Y_Propanol+#
	# K+#
	# d_c+#
	# t_delay+#
	# P+#
	t_fc,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	XO2+#
	Inert+#
	XN2+#
	XHe+#
	Y_Heptane+#
	Y_Propanol+#
	K+#
	d_c+#
	t_delay+#
	t_fc,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	# XO2+#
	Inert+#
	XN2+#
	XHe+#
	Y_Heptane+#
	Y_Propanol+#
	K+#
	d_c+#
	t_delay+#
	t_fc,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
#plot tdtv_avg reet for all experiemnts#
quartz()#
EABBA_ctree <- ctree(EF_avg~tdtv_avg+#
	d0+#
	XO2+#
	Inert+#
	XN2+#
	XHe+#
	Y_Heptane+#
	Y_Propanol+#
	K+#
	d_c+#
	t_delay+#
	t_fc,#
mincriterion=1-p_value,minbucket=0,minsplit=0,stump=FALSE)#
plot(EABBA_ctree, main="EF_avg (All Experiments)")
source('~/mygitFiles/hephex_scatterplots/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
names(HepHexPropGlyData_all)
#plot EABBA vs d0 and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$eps, #
	yvar = HepHexPropGlyData_all$EF_avg, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EABBAvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = c(1.0, 10.0, 20.0),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	createBoxPlot = 1 ,#
	errBarWidth = 0.05,#
	errbarHeight = 0.5,#
	VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 0,#
	createVboxplot2nd = 1,#
	VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	xExpansionFactor= 0.05,#
	yExpansionFactor= 0.22,	#
	VBpMargins = c(0, 0, 0.5, 0),#
	EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	txts = 6,		#specifies text size for axis labels#
	leS = 6,		#specifies text size for legend	#
	size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	jittptSize = 0.3 #
	)
names(HepHexPropGlyData_all)
#plot EABBA vs d0 and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EABBAvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = c(1.0, 10.0, 20.0),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	createBoxPlot = 1 ,#
	errBarWidth = 0.05,#
	errbarHeight = 0.5,#
	VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 0,#
	createVboxplot2nd = 1,#
	VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	xExpansionFactor= 0.05,#
	yExpansionFactor= 0.22,	#
	VBpMargins = c(0, 0, 0.5, 0),#
	EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	txts = 6,		#specifies text size for axis labels#
	leS = 6,		#specifies text size for legend	#
	size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	jittptSize = 0.3 #
	)
names(HepHexPropGlyData_all)
#plot EABBA vs d0 and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0 / HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EABBAvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = c(1.0, 10.0, 20.0),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	createBoxPlot = 1 ,#
	errBarWidth = 0.05,#
	errbarHeight = 0.5,#
	VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 0,#
	createVboxplot2nd = 1,#
	VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	xExpansionFactor= 0.05,#
	yExpansionFactor= 0.22,	#
	VBpMargins = c(0, 0, 0.5, 0),#
	EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	txts = 6,		#specifies text size for axis labels#
	leS = 6,		#specifies text size for legend	#
	size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	jittptSize = 0.3 #
	)
#plot EABBA vs d0 and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0, #
	yvar = HepHexPropGlyData_all$EF_avg, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EABBAvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = c(1.0, 10.0, 20.0),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	createBoxPlot = 1 ,#
	errBarWidth = 0.05,#
	errbarHeight = 0.5,#
	VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 0,#
	createVboxplot2nd = 1,#
	VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	xExpansionFactor= 0.05,#
	yExpansionFactor= 0.22,	#
	VBpMargins = c(0, 0, 0.5, 0),#
	EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = c(1.0, 10.0, 20.0),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 0,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
range(HepHexPropGlyData_all$eps)
min(HepHexPropGlyData_all$eps)
max(HepHexPropGlyData_all$eps)
linspace(range(HepHexPropGlyData_all$eps),3)
library(pracma)
linspace(range(HepHexPropGlyData_all$eps),3)
a <- min(HepHexPropGlyData_all$eps)
b <- max(HepHexPropGlyData_all$eps)
linspace(a,b,3)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 0,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4)
names(HepHexPropGlyData_all)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0 / HepHexPropGlyData_all$dc, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0 / HepHexPropGlyData_all$dc, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	# rangeDdiscrete = linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0 / HepHexPropGlyData_all$dc, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$eps/ HepHexPropGlyData_all$dc), max(HepHexPropGlyData_all$eps/ HepHexPropGlyData_all$dc),4),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4),#
	factors = HepHexPropGlyData_all$fuel,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$EF_avg, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$EF_avg), max(HepHexPropGlyData_all$EF_avg),4),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
names(HepHexPropGlyData_all)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$K, #
	yvar = HepHexPropGlyData_all$EF_avg, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$EF_avg), max(HepHexPropGlyData_all$EF_avg),4),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$EF_avg, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*" (mm)"), 	#
	ylabel = expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$EF_avg), max(HepHexPropGlyData_all$EF_avg),4),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*"/ d"[c]*), 	#
	ylabel = expression( epsilon ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$EF_avg), max(HepHexPropGlyData_all$EF_avg),4),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*"/ d"[c]), 	#
	ylabel = expression( epsilon ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = linspace(min(HepHexPropGlyData_all$EF_avg), max(HepHexPropGlyData_all$EF_avg),4),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p38 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.75, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*"/ d"[c]), 	#
	ylabel = expression( epsilon ), #
	# rangeDdiscrete = rangeDdiscrete3,#
	# rangeDdiscrete = c(1.0, 5, 10, 15, 20),	#
	rangeDdiscrete = signif(linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4), 3),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	# createBoxPlot = 1 ,#
	# errBarWidth = 0.05,#
	# errbarHeight = 0.5,#
	# VboxPlotxFactors = HepHexPropGlyData_all$doSizeFactor, #x factor for marginal boxplot) )#
	sci_yAxis = 1,#
	# createVboxplot2nd = 1,#
	# VboxPlotxFactors2nd = HepHexPropGlyData_all$fuel2,#
	# xExpansionFactor= 0.05,#
	# yExpansionFactor= 0.22,	#
	# VBpMargins = c(0, 0, 0.5, 0),#
	# EABBA1 = 1 ,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p39 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.3, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*"/ d"[c]), 	#
	ylabel = expression( epsilon ), #
	rangeDdiscrete = signif(linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4), 3),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	sci_yAxis = 1,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p39 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.3, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*"/ d"[c]), 	#
	ylabel = expression( epsilon ), #
	rangeDdiscrete = signif(linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4), 2),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	sci_yAxis = 1,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
#plot eps vs d0/dc and various boxplots using D Monte Carlo results#
p39 <- createPlot(#
	xvar = HepHexPropGlyData_all$d0/HepHexPropGlyData_all$d_c, #
	yvar = HepHexPropGlyData_all$eps, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EpsvsD0_allFuel_allexp_MCN95v2.pdf",#
	legendXloc = 0.3, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*"/ d"[c]), 	#
	ylabel = expression( epsilon ), #
	rangeDdiscrete = signif(linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4), 3),#
	factors = HepHexPropGlyData_all$Inert,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	sci_yAxis = 1,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	# EFvstdtvONLYcolorGrad = 1,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
signif(linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4), 3)
test <- signif(linspace(min(HepHexPropGlyData_all$eps), max(HepHexPropGlyData_all$eps),4), 3)
test[2]-test[1]
test[3]-test[2]
test[4]-test[3]
0.00327+0.218
source('~/mygitFiles/hephex_scatterplots/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
source('~/mygitFiles/droplet_trajectories/singleAndMulticomponent/original_data/igExt_plots.R', chdir = TRUE)
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
fit$coefficients
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayMorning/catapult_code_check.R', chdir = TRUE)
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayAfternoon/catapult_code_check.R', chdir = TRUE)
library(pracma)
beta <- linspace(0.01,0.2,100)
tv <- log(1/beta)
plot(tv,beta)
plot(beta,tv)
plot(linspace(0.001,0.01),log(1/beta))
source('~/Box Sync/HepHex_Paper/HepHex_Diffusivities/conditional_inference_analysisHepHex.R', chdir = TRUE)
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayAfternoon/catapult_code_check.R', chdir = TRUE)
n_trials
2*2.92/(8)
n_f
2*sigma_pooled/sqrt(n_f)
sigma_pooled
2*2.92/4
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/thursdayAfternoon/catapult_code_check.R', chdir = TRUE)
fit$coefficients
2.474874^2
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_2-TemperatureMeasurement/thermocouple_LabView_data/thermocouple_plots.R', chdir = TRUE)
combined
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/fridayAfternoon/catapult_code_check.R', chdir = TRUE)
3.297726*2/4
23.5/1.15
23.5/1.64
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/fridayAfternoon/catapult_code_check.R', chdir = TRUE)
nu
source('~/Box Sync/S2018TASHIP_EME109 (Erickson)/labs/lab_1-Statapult/fridayAfternoon/catapult_code_check.R', chdir = TRUE)
print(fit$coef[2:8])
nu
names(Y_dataframe)
Y
max(Y)
min(Y)
source('~/mygitFiles/hephex_scatterplots/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
names(HepHexPropGlyData_all)
#plot eps vs K_avg and various boxplots using D Monte Carlo results#
p39 <- createPlot(#
	xvar = HepHexPropGlyData_all$K, #
	yvar = HepHexPropGlyData_all$EF_avg, #
	importDataFrame = HepHexPropGlyData_all, #
	plotname = "EABBAvsK_allFuel_allexp_MCN95.pdf",#
	legendXloc = 0.3, #
	legendYloc = 0.80, #
	xlabel = expression( "d"[0]*"/ d"[c]), 	#
	ylabel = expression( epsilon ), #
	rangeDdiscrete = signif(linspace(min(HepHexPropGlyData_all$EF_avg), max(HepHexPropGlyData_all$EF_avg),4), 2),#
	factors = HepHexPropGlyData_all$XO2,#
	plotTitle = "Hep/Hex & Prop/Gly",#
	sci_yAxis = 1,#
	d0xAxisOnly = 1,#
	ptsize = 3.0,#
	bgColor = "white",#
	EF1_xstart = 2.8,#
	EF1_xend = 3.0,#
	EF1_txtx = 2.75,#
	# txts = 6,		#specifies text size for axis labels#
	# leS = 6,		#specifies text size for legend	#
	# size.w = 4.0,	#specifies width of .pdf of plot in units specified by un#
	# size.h = 2.4,		#specifies height of .pdf of plot in units specified by un#
	# bpAxs = 4, 		#specifies axis text size for marginal boxplots	#
	# jittptSize = 0.3 #
	)
p38
ggplot(p3)
ggplot(p38)
source('~/Desktop/test_beamer/grouping_analysis.R', chdir = TRUE)
source('~/mygitFiles/hephex_scatterplots/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
p40 <- ggplot2(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
    	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
    		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		annotate("text",x=EF1_txtx, y=EF1_txty,#
			parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=importDataFrame, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) )
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
    	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
    		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		annotate("text",x=EF1_txtx, y=EF1_txty,#
			parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=importDataFrame, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) )
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=importDataFrame, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) )
errBarWidth <- 0.1#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=importDataFrame, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) )
errBarWidth <- 0.1#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) )
p40
errBarWidth <- 0.1#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) ) + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
errBarWidth <- 0.1#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) ) + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
errBarWidth <- 0.1#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		    		xmax = K+Uncertainty_K), height= errbarHeight)    		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) ) + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
errBarWidth <- 0.1#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		    		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) ) + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
errBarWidth <- 0.1#
errbarHeight <- 2e-9#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		    		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) ) + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
errBarWidth <- 0.1#
errbarHeight <- 0.1#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		    		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) ) + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
errBarWidth <- 0.1#
errbarHeight <- 1.0#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
  #   	annotate("segment", x = EF1_xstart, xend = EF1_xend, y = EF1_ystart, #
  #   		yend = EF1_yend, colour="blue", size=0.5, arrow=arrow(length=unit(.2, "cm") ) ) +#
		# annotate("text",x=EF1_txtx, y=EF1_txty,#
		# 	parse=TRUE,label="1.0" ) +#
		geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	    		ymax = EF_high95), width=errBarWidth) +#
		geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		    		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +#
		# scale_colour_gradient(limits=c(min(importDataFrame$t_fc), max(importDataFrame$t_fc)),#
		# 					 guide="colourbar")#
		# scale_colour_gradient(high="#969696", guide="colourbar")		#
		# scale_colour_gradient(high="grey",low="black", guide="colourbar")				#
		scale_colour_gradient(high="grey",low="black", guide="colourbar",#
			breaks=c(2,15,28,42,55) ) + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
errBarWidth <- 0.1#
errbarHeight <- 1.0#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
		# geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	 #    		ymax = EF_high95), width=errBarWidth) +#
		# geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		#     		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +		#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +			#
		scale_colour_gradient(high="grey",low="black", guide="colourbar") + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
names(HepHexPropGlyData_all)
errBarWidth <- 0.1#
errbarHeight <- 1.0#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		aes(group=Inert, shape=Inert)+#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
		# geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	 #    		ymax = EF_high95), width=errBarWidth) +#
		# geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		#     		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +		#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +			#
		scale_colour_gradient(high="grey",low="black", guide="colourbar") + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
errBarWidth <- 0.1#
errbarHeight <- 1.0#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		aes(group=Inert, shape=Inert)+#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
		# geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	 #    		ymax = EF_high95), width=errBarWidth) +#
		# geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		#     		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +		#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +			#
		scale_colour_gradient(high="grey",low="black", guide="colourbar") + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(legend.position=c(0.3, 0.7),#
		plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
errBarWidth <- 0.1#
errbarHeight <- 1.0#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		aes(group=Inert, shape=Inert)+#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
		# geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	 #    		ymax = EF_high95), width=errBarWidth) +#
		# geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		#     		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +		#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +			#
		scale_colour_gradient(high="grey",low="black", guide="colourbar") + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(legend.position=c(0.2, 0.8),#
		plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
errBarWidth <- 0.1#
errbarHeight <- 1.0#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		aes(group=Inert, shape=Inert)+#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
		# geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	 #    		ymax = EF_high95), width=errBarWidth) +#
		# geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		#     		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,15,17,22,15,16,20) ) +		#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +			#
		scale_colour_gradient(high="grey",low="black", guide="colourbar") + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(legend.position=c(0.15, 0.75),#
		plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
# errBarWidth <- 0.1#
# errbarHeight <- 1.0#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
# bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		aes(group=Inert, shape=Inert)+#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
		# geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	 #    		ymax = EF_high95), width=errBarWidth) +#
		# geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		#     		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(20,17,17,22,15,16,20) ) +		#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +			#
		scale_colour_gradient(high="grey",low="black", guide="colourbar") + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(legend.position=c(0.15, 0.75),#
		plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
# errBarWidth <- 0.1#
# errbarHeight <- 1.0#
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
# bgColor <- "#f7f7f7"#
txts <- 12#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		aes(group=Inert, shape=Inert)+#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
		# geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	 #    		ymax = EF_high95), width=errBarWidth) +#
		# geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		#     		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(19,17,17,22,15,16,20) ) +		#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="fuel type") +			#
		scale_colour_gradient(high="grey",low="black", guide="colourbar") + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(legend.position=c(0.15, 0.75),#
		plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
source('~/Desktop/YoCorrections.R', chdir = TRUE)
i
FP
FA
source('~/Desktop/YoCorrections.R', chdir = TRUE)
i
source('~/Desktop/YoCorrections.R', chdir = TRUE)
io
i
Nmax
source('~/mygitFiles/hephex_scatterplots/hephexPlotsASGSR.Rev04.R', chdir = TRUE)
p40
xlabel <- expression( "K (mm"^2*"/s)" )#
ylabel <- expression( "D/( 0.5(D"[BA]^0*+D[AB]^0* " ))" )#
SpMargins <- c(0, 0, 0.5, 0.5)#
txts <- 12#
bgColor <- "white"#
p40 <- ggplot(data=HepHexPropGlyData_all) + aes(x=K, y=EF_avg) +#
		aes(group=Inert, shape=Inert)+#
		geom_hline(aes(yintercept=1), colour="#0000EE", linetype=10,size=1)  +#
		# geom_errorbar(data=HepHexPropGlyData_all, aes(ymin = EF_low95, #print error bars for D values#
	 #    		ymax = EF_high95), width=errBarWidth) +#
		# geom_errorbarh(data=HepHexPropGlyData_all, aes(xmin= K-Uncertainty_K,#
		#     		xmax = K+Uncertainty_K), height= errbarHeight) + 		#
		scale_shape_manual( values=c(19,17,17,22,15,16,20) ) +		#
		geom_point( aes(colour=XO2), size=4.0 ) +#
		labs(col="XO2", shape="inert type") +			#
		scale_colour_gradient(high="grey",low="black", guide="colourbar") + #
		xlab(xlabel) + #
		ylab(ylabel ) +#
		theme_bw()+#
		theme(legend.position=c(0.15, 0.75),#
		plot.title = element_text(colour="black",face="bold",size=12),#
		panel.background = element_rect(fill = bgColor),#
		axis.text = element_text(size=txts,colour="black"),#
		plot.margin= unit(SpMargins, "lines") )
p40
source('~/Desktop/YoCorrections.R', chdir = TRUE)
source('~/Desktop/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/errorbars_main.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/mcUandBisect_test.R', chdir = TRUE)
D_N95
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/mcUandBisect_test.R', chdir = TRUE)
D_N95
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/mcUandBisect_test.R', chdir = TRUE)
source('~/mygitFiles/diffusivity_calculations/errorbar_calculations/mcUandBisect_test.R', chdir = TRUE)
